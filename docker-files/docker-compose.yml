version: '3.1'
services:
  RevProxy:
    image: haproxytech/haproxy-alpine:latest
    restart: always
    ports:
      - "80:80"
      - "81:81"
      - "3001:3001"
      - "3010:3010"
      - "3100:3100"
      - "27010:27010"

    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.2

  webapp:
    build:
      context: ../WebAppRedWhiskers
      dockerfile: ../WebAppRedWhiskers/Dockerfile
    env_file:
      - .env
    ports:
      - "3020:3000"
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.3

  webapp1:
    build:
      context: ./../WebAppRedWhiskers
      dockerfile: ./../WebAppRedWhiskers/Dockerfile
    env_file:
      - .env
    ports:
      - "3011:3000"
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.4


  api:
    build:
      context: ./../APIRedWhiskers
      dockerfile: ./../APIRedWhiskers/Dockerfile
    restart: always
    ports:
      - "3030:3000"
    env_file:
        - .env
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.5

  api1:
    build:
      context: ./../APIRedWhiskers
      dockerfile: ./../APIRedWhiskers/Dockerfile
    restart: always
    ports:
      - "3031:3000"
    env_file:
      - .env
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.6

  GameServer:
    image: node:latest
    restart: always
    ports:
      - "3040:3000"
    env_file:
        - .env
    volumes:
        - ./../SocketsRedwhiskers:/usr/src/app
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.7

  GameServer1:
    image: node:latest
    restart: always
    ports:
      - "3041:3000"
    env_file:
      - .env
    volumes:
      - ./../SocketsRedwhiskers:/usr/src/app
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.8

  AI:
    image: python:latest
    restart: always
    ports:
      - "3051:3000"
    env_file:
      - .env
    volumes:
      - ./../AIRedWhiskers:/usr/src/app
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.9

  AI1:
    image: python:latest
    restart: always
    ports:
      - "3052:3000"
    env_file:
      - .env
    volumes:
      - ./../AIRedWhiskers:/usr/src/app
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.10

  mongo1:
    container_name: mongo1
    image: mongo:7.0
    command: --replSet rs0 --bind_ip_all --port 27017
    ports:
      - 27017:27017
    healthcheck:
      test: mongosh --eval "try {rs.status()} catch(err) {rs.initiate({_id:'rs0',members:[{_id:0,host:'172.28.0.11:27017',priority:2},{_id:1,host:'172.28.0.12:27018',priority:1},{_id:2,host:'172.28.0.13:27019',priority:1},{_id:3,host:'172.28.0.14:27020',priority:1}]})}" | mongosh --port 27017 --quiet
      interval: 1s
      timeout: 10s
      retries: 5
    environment:
      MONGO_INITDB_DATABASE: whiskers
    volumes:
      - "mongo1_data:/data/db"
      - "mongo1_config:/data/configdb"
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.11

  mongo2:
    container_name: mongo2
    image: mongo:7.0
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27018" ]
    ports:
      - 27018:27018
    environment:
      MONGO_INITDB_DATABASE: whiskers
    volumes:
      - "mongo2_data:/data/db"
      - "mongo2_config:/data/configdb"
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.12

  mongo3:
    container_name: mongo3
    image: mongo:7.0
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27019" ]
    ports:
      - 27019:27019
    environment:
      MONGO_INITDB_DATABASE: whiskers
    volumes:
      - "mongo3_data:/data/db"
      - "mongo3_config:/data/configdb"
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.13

  mongo4:
    container_name: mongo4
    image: mongo:7.0
    command: [ "--replSet", "rs0", "--bind_ip_all", "--port", "27020" ]
    ports:
      - 27020:27020
    environment:
      MONGO_INITDB_DATABASE: whiskers
    volumes:
      - "mongo4_data:/data/db"
      - "mongo4_config:/data/configdb"
    networks:
      whiskers-net:
        ipv4_address: 172.28.0.14

volumes:
  dbdata6:
  mongo1_data:
  mongo2_data:
  mongo3_data:
  mongo4_data:
  mongo1_config:
  mongo2_config:
  mongo3_config:
  mongo4_config:


networks:
  whiskers-net:
    driver: bridge
    ipam:
      config:
        - subnet: "172.28.0.0/24"
